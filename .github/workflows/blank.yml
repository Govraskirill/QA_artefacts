# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  workflow_dispatch:
    inputs:
      service:
        required: true
  push:
    branches: 
      - master

jobs:
  lists:
    runs-on: ubuntu-latest
    outputs:
      packages: ${{ steps.list.outputs.service }}

    steps:
      - name: Packages list
        id: list
        run: |
          if [ ${{ github.event_name }} == 'workflow_dispatch' ]; then
            echo "service=${{format('[\"{0}\"]',inputs.service)}}" >> "$GITHUB_OUTPUT"  
          else
            echo service="['api-service','data-tables-service','infra-manager-service','support-service','users-service','applicants-service','document-service','partner-service','verification-service','billing-service','external-data-providers-service','storage-service']" >> "$GITHUB_OUTPUT"
          fi
      - name: output
        run: echo ${{ steps.list.outputs.service }}

  

  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.

      - name: Packages list warning
        run: echo "::warning title=Package list::You should add a new package to the list if appeared!"

      - name: Packages list
        id: list
        run: |
          if [ ${{ github.event_name }} == 'workflow_dispatch' ]; then
            echo "service=${{format('[{0}]',inputs.service)}}" >> "$GITHUB_OUTPUT"  
          else
            echo service="['api-service','data-tables-service','infra-manager-service','support-service','users-service','applicants-service','document-service','partner-service','verification-service','billing-service','external-data-providers-service','storage-service']" >> "$GITHUB_OUTPUT"
          fi
          echo $GITHUB_OUTPUT
      - name: echo command
        run: |
          echo ${{ fromJSON(needs.lists.outputs.packages) }}
